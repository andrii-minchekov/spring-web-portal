<?xml version="1.0" encoding="UTF-8"?>

<!-- - Sample namespace-based configuration - -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<debug />

	<global-method-security pre-post-annotations="enabled" />
	<!-- authentication-manager-ref="org.springframework.security.authenticationManager" -->

	<!-- <http pattern="/resources/**" security="none" /> -->
	<!-- <http pattern="/logout" security="none" /> -->
	<http pattern="/bloggers/signin" security="none" />
 

	<http auto-config="false" use-expressions="true">
		<intercept-url pattern="/secure/extreme/**" access="hasRole('supervisor')" />
		<!-- <intercept-url pattern="/bloggers/signin" access="isAnonymous()" /> -->
		<intercept-url pattern="/bloggers/**" access="isAuthenticated()" /> 
		<!-- Allow all other requests. In a real application you should adopt a 
			whitelisting approach where access is not allowed by default -->
<!-- 		<intercept-url pattern="/bloggers/createNewBlogger"
			access="IS_AUTHENTICATED_ANONYMOUSLY" /> -->
		<intercept-url pattern="/**" access="permitAll" />
		<form-login login-page="/bloggers/signin" 
			login-processing-url="/bloggers/signinPost" username-parameter="email"
			password-parameter="password" default-target-url="/bloggers/postList" />
		<logout logout-success-url="/loggedout.jsp" delete-cookies="JSESSIONID" logout-url="/logout"/>
		<remember-me />
		<!-- Uncomment to enable X509 client authentication support <x509 /> -->
		<!-- Uncomment to limit the number of sessions a user can have -->
		<session-management invalid-session-url="/timeout">
			<concurrency-control max-sessions="5"
				error-if-maximum-exceeded="false" />
		</session-management>

	</http>

	<!-- Usernames/Passwords are rod/koala dianne/emu scott/wombat peter/opal -->
	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- <authentication-manager> <authentication-provider> <password-encoder 
		ref="encoder"/> <user-service> <user name="rod" password="$2a$10$75pBjapg4Nl8Pzd.3JRnUe7PDJmk9qBGwNEJDAlA3V.dEJxcDKn5O" 
		authorities="supervisor, user, teller" /> <user name="dianne" password="$2a$04$bCMEyxrdF/7sgfUiUJ6Ose2vh9DAMaVBldS1Bw2fhi1jgutZrr9zm" 
		authorities="user,teller" /> <user name="scott" password="$2a$06$eChwvzAu3TSexnC3ynw4LOSw1qiEbtNItNeYv5uI40w1i3paoSfLu" 
		authorities="user" /> <user name="peter" password="$2a$04$8.H8bCMROLF4CIgd7IpeQ.tcBXLP5w8iplO0n.kCIkISwrIgX28Ii" 
		authorities="user" /> </user-service> </authentication-provider> </authentication-manager> -->


	<!-- <beans:bean id="org.springframework.security.authenticationManager" 
		name="authenticationManager" class="org.springframework.security.authentication.ProviderManager"> 
		<beans:constructor-arg name="providers"> <beans:list> <beans:ref bean="daoAuthenticationProvider" 
		/> <beans:ref bean="inMemoryAuthenticationProvider" /> <beans:ref bean="anonymousAuthenticationProvider" 
		/> </beans:list> </beans:constructor-arg> </beans:bean> -->


	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="encoder" />
			<user-service>
				<user name="rod"
					password="$2a$10$75pBjapg4Nl8Pzd.3JRnUe7PDJmk9qBGwNEJDAlA3V.dEJxcDKn5O"
					authorities="supervisor, user, teller" />
				<user name="dianne"
					password="$2a$04$bCMEyxrdF/7sgfUiUJ6Ose2vh9DAMaVBldS1Bw2fhi1jgutZrr9zm"
					authorities="user,teller" />
				<user name="scott"
					password="$2a$06$eChwvzAu3TSexnC3ynw4LOSw1qiEbtNItNeYv5uI40w1i3paoSfLu"
					authorities="user" />
				<user name="peter"
					password="$2a$04$8.H8bCMROLF4CIgd7IpeQ.tcBXLP5w8iplO0n.kCIkISwrIgX28Ii"
					authorities="user" />
				<user name="admin@i.ua" password="$2a$10$PGLOdBcC.JnJfn7zH4/rzeMOizs3tWEZADmn/sbEhbMCQb8W9vqJu" 
				authorities="ROLE_SUPERVISOR, ROLE_USER" />
			</user-service>
		</authentication-provider>
	</authentication-manager>
	<!-- <beans:bean id="inMemoryAuthenticationProvider" class="com.portal.security.InMemoryAuthenticationProvider"> 
		<beans:property name="userDetailsService" ref="userServiceInMemory"></beans:property> 
		</beans:bean> -->

	<!-- <user-service id="userServiceInMemory"> encrypted 11 = $2a$10$PGLOdBcC.JnJfn7zH4/rzeMOizs3tWEZADmn/sbEhbMCQb8W9vqJu 
		<user name="admin@i.ua" password="11" authorities="ROLE_SUPERVISOR, ROLE_USER" 
		/> <user name="rod" password="$2a$10$75pBjapg4Nl8Pzd.3JRnUe7PDJmk9qBGwNEJDAlA3V.dEJxcDKn5O" 
		authorities="ROLE_SUPERVISOR, ROLE_USER" /> <user name="dianne" password="$2a$04$bCMEyxrdF/7sgfUiUJ6Ose2vh9DAMaVBldS1Bw2fhi1jgutZrr9zm" 
		authorities="ROLE_USER" /> <user name="scott" password="$2a$06$eChwvzAu3TSexnC3ynw4LOSw1qiEbtNItNeYv5uI40w1i3paoSfLu" 
		authorities="user" /> <user name="peter" password="$2a$04$8.H8bCMROLF4CIgd7IpeQ.tcBXLP5w8iplO0n.kCIkISwrIgX28Ii" 
		authorities="user" /> </user-service> -->

	<!-- <beans:bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider"> 
		<beans:property name="key" value="SomeUniqueKeyForThisApplication" /> </beans:bean> 
		<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"> 
		<beans:property name="userDetailsService" ref="userServiceInMemory" /> <beans:property 
		name="passwordEncoder" ref="encoder" /> </beans:bean> -->

	<!-- <user-service id="userDetailsService"> <user name="jimi" password="jimispassword" 
		authorities="ROLE_USER, ROLE_ADMIN" /> <user name="bob" password="bobspassword" 
		authorities="ROLE_USER" /> </user-service> -->

</beans:beans>